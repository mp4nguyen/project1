"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('angular2/core');
var common_1 = require('angular2/common');
var common_2 = require('angular2/common');
var router_1 = require('angular2/router');
var companies_services_1 = require('../services/companies.services');
var logging_service_1 = require('../../shared/services/logging.service');
var input_component_1 = require('../../shared/components/input/input.component');
var cliniclist_component_1 = require('./cliniclist.component');
var doctorlist2_component_1 = require('./doctorlist2.component');
var address_component_1 = require('../../shared/components/address/address.component');
var tab_component_1 = require('../../shared/components/tab/tab.component');
var tabset_component_1 = require('../../shared/components/tab/tabset.component');
var CompanyDetailComponent = (function () {
    function CompanyDetailComponent(_companiesService, _log, _router, _fb) {
        this._companiesService = _companiesService;
        this._log = _log;
        this._router = _router;
        this._fb = _fb;
        this.isSubmitted = false;
        this.components = new Array();
        this.wards = ['1', '2', '3', '4', 'abc'];
        this.addressObject = {};
        this.companyIdControl = new common_2.Control();
        this.companyNameControl = new common_2.Control("", common_2.Validators.required);
        this.addressControl = new common_2.Control("", common_2.Validators.required);
        this.wardControl = new common_2.Control("", common_2.Validators.required);
        this.suburbDistrictControl = new common_2.Control("", common_2.Validators.required);
        this.stateProvinceControl = new common_2.Control("", common_2.Validators.required);
        this.countryControl = new common_2.Control("", common_2.Validators.required);
        this.descriptionControl = new common_2.Control("");
        this.isenableControl = new common_2.Control("");
        this.policyControl = new common_2.Control("");
        this.conditionToBookControl = new common_2.Control("");
        this.components.push({ control: this.companyNameControl, type: 'text', title: 'Company Name', placeholder: 'Company Name', isRequired: true, requiredMsg: 'Company name is required', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.addressControl, type: 'text', title: 'Address', placeholder: 'Address', isRequired: true, requiredMsg: 'Address is required', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.wardControl, type: 'option', title: 'Ward', placeholder: 'Ward', isRequired: false, requiredMsg: 'Ward is required', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9', values: this.wards });
        this.components.push({ control: this.suburbDistrictControl, type: 'text', title: 'District', placeholder: 'District', isRequired: true, requiredMsg: 'District is required !!!', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.stateProvinceControl, type: 'text', title: 'Province', placeholder: 'Province', isRequired: true, requiredMsg: 'Province is required !!!', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.countryControl, type: 'text', title: 'Country', placeholder: 'Country', isRequired: true, requiredMsg: 'Country is required !!!', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.isenableControl, type: 'boolean', title: 'Enable', placeholder: 'Company Name', isRequired: false, requiredMsg: 'Company name is required !!!', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.descriptionControl, type: 'text', title: 'Description', placeholder: 'Description', isRequired: false, requiredMsg: 'Company name is required !!!', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.policyControl, type: 'text', title: 'Policy', placeholder: 'Policy', isRequired: false, requiredMsg: 'Company name is required !!!', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.components.push({ control: this.conditionToBookControl, type: 'text', title: 'Condition to book', placeholder: 'Condition to book', isRequired: false, requiredMsg: 'Company name is required !!!', labelColumnClass: 'col-md-3 control-label', inputColumnClass: 'col-md-9' });
        this.myForm = new common_2.ControlGroup({
            companyId: this.companyIdControl,
            companyName: this.companyNameControl,
            address: this.addressControl,
            ward: this.wardControl,
            suburbDistrict: this.suburbDistrictControl,
            stateProvince: this.stateProvinceControl,
            country: this.countryControl,
            description: this.descriptionControl,
            isenable: this.isenableControl,
            policy: this.policyControl,
            conditionToBook: this.conditionToBookControl,
        });
    }
    CompanyDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.setCompanyData();
        this.myForm.valueChanges
            .subscribe(function (value) {
            _this._log.log("Model Driven Form : " + JSON.stringify(value));
        });
    };
    CompanyDetailComponent.prototype.addressControlGroup = function (addressControlGroup) {
        this.myForm.addControl('addressGroup', this._fb.group(addressControlGroup.controls));
    };
    CompanyDetailComponent.prototype.save = function () {
        var _this = this;
        this.isSubmitted = true;
        console.log('submiting...', this.myForm.value);
        this._companiesService.saveCompany(this.myForm.value).subscribe(function (data) { _this._log.log("form", data); _this.setCompanyData(); }, function (err) { _this._log.log(err); }, function () { _this._log.log('created !'); });
    };
    CompanyDetailComponent.prototype.showFormControls = function (form) {
        console.log(this.myForm);
    };
    CompanyDetailComponent.prototype.newOrEditClinicDetail = function (clinic) {
        this._companiesService.setCurrentClinic(clinic);
        this._log.log("company = ", clinic);
        this._router.navigate(['ClinicDetail']);
    };
    CompanyDetailComponent.prototype.newOrEditDoctorDetail = function (doctor) {
        this._log.log("clicked on doctor = ", doctor);
        this._companiesService.setCurrentDoctor(doctor);
        this._router.navigate(['DoctorDetail']);
    };
    CompanyDetailComponent.prototype.setCompanyData = function () {
        this.company = this._companiesService.getCurrentCompany();
        this._log.log("Get data from company list = ", this.company, this.clinics);
        if (this.company) {
            this.clinics = this.company.clinics;
            this.doctors = this.company.doctors;
            this.companyIdControl.updateValue(this.company.companyId);
            this.companyNameControl.updateValue(this.company.companyName);
            this.addressControl.updateValue(this.company.address);
            this.wardControl.updateValue(this.company.ward);
            this.suburbDistrictControl.updateValue(this.company.suburbDistrict);
            this.stateProvinceControl.updateValue(this.company.stateProvince);
            this.countryControl.updateValue(this.company.country);
            this.descriptionControl.updateValue(this.company.description);
            this.isenableControl.updateValue(this.company.isenable);
            this.policyControl.updateValue(this.company.policy);
            this.conditionToBookControl.updateValue(this.company.conditionToBook);
            this.addressObject.address = this.company.address;
            this.addressObject.ward = this.company.ward;
            this.addressObject.suburbDistrict = this.company.suburbDistrict;
            this.addressObject.stateProvince = this.company.stateProvince;
            this.addressObject.postcode = this.company.postcode;
            this.addressObject.country = this.company.country;
        }
    };
    CompanyDetailComponent = __decorate([
        core_1.Component({
            selector: 'company-detail',
            templateUrl: './companies/components/companydetail.component.html',
            providers: [],
            directives: [common_1.FORM_DIRECTIVES, common_1.CORE_DIRECTIVES, router_1.ROUTER_DIRECTIVES, common_1.NgClass, common_1.NgForm, input_component_1.InputComponent, common_1.NgSwitch, common_1.NgSwitchWhen, common_1.NgSwitchDefault, tab_component_1.TabComponent, tabset_component_1.TabsetComponent, cliniclist_component_1.ClinicListComponent, doctorlist2_component_1.DoctorListComponent, address_component_1.AddressComponent]
        }), 
        __metadata('design:paramtypes', [companies_services_1.CompaniesService, logging_service_1.MyLogger, router_1.Router, common_2.FormBuilder])
    ], CompanyDetailComponent);
    return CompanyDetailComponent;
}());
exports.CompanyDetailComponent = CompanyDetailComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbmllcy9jb21wb25lbnRzL2NvbXBhbnlkZXRhaWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxxQkFBK0IsZUFBZSxDQUFDLENBQUE7QUFDL0MsdUJBQW9HLGlCQUFpQixDQUFDLENBQUE7QUFDdEgsdUJBQTBFLGlCQUFpQixDQUFDLENBQUE7QUFDNUYsdUJBQW1ELGlCQUFpQixDQUFDLENBQUE7QUFFckUsbUNBQStCLGdDQUFnQyxDQUFDLENBQUE7QUFDaEUsZ0NBQXdCLHVDQUF1QyxDQUFDLENBQUE7QUFDaEUsZ0NBQThCLCtDQUErQyxDQUFDLENBQUE7QUFPOUUscUNBQWtDLHdCQUF3QixDQUFDLENBQUE7QUFFM0Qsc0NBQWtDLHlCQUF5QixDQUFDLENBQUE7QUFDNUQsa0NBQStCLG1EQUFtRCxDQUFDLENBQUE7QUFDbkYsOEJBQTJCLDJDQUEyQyxDQUFDLENBQUE7QUFDdkUsaUNBQThCLDhDQUE4QyxDQUFDLENBQUE7QUFnQjdFO0lBd0JFLGdDQUNrQixpQkFBbUMsRUFDbkMsSUFBYyxFQUNkLE9BQWUsRUFDZixHQUFnQjtRQUhoQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQWtCO1FBQ25DLFNBQUksR0FBSixJQUFJLENBQVU7UUFDZCxZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQ2YsUUFBRyxHQUFILEdBQUcsQ0FBYTtRQXZCM0IsZ0JBQVcsR0FBYSxLQUFLLENBQUM7UUFDOUIsZUFBVSxHQUFrQixJQUFJLEtBQUssRUFBVSxDQUFDO1FBYy9DLFVBQUssR0FBWSxDQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxLQUFLLENBQUMsQ0FBQztRQUV6QyxrQkFBYSxHQUFVLEVBQUUsQ0FBQztRQVNoQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxnQkFBTyxFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksZ0JBQU8sQ0FBQyxFQUFFLEVB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LEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFFcEQsQ0FBQztJQUNILENBQUM7SUF2S0g7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGdCQUFnQjtZQUMxQixXQUFXLEVBQUUscURBQXFEO1lBQ2xFLFNBQVMsRUFBRSxFQUFFO1lBQ2IsVUFBVSxFQUFFLENBQUMsd0JBQWUsRUFBRSx3QkFBZSxFQUFDLDBCQUFpQixFQUFDLGdCQUFPLEVBQUMsZUFBTSxFQUFDLGdDQUFjLEVBQUMsaUJBQVEsRUFBQyxxQkFBWSxFQUFDLHdCQUFlLEVBQUMsNEJBQVksRUFBQyxrQ0FBZSxFQUFDLDBDQUFtQixFQUFDLDJDQUFtQixFQUFDLG9DQUFnQixDQUFDO1NBQzNOLENBQUM7OzhCQUFBO0lBbUtGLDZCQUFDO0FBQUQsQ0ExSkEsQUEwSkMsSUFBQTtBQTFKWSw4QkFBc0IseUJBMEpsQyxDQUFBIiwiZmlsZSI6ImNvbXBhbmllcy9jb21wb25lbnRzL2NvbXBhbnlkZXRhaWwuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsT25Jbml0fSBmcm9tICdhbmd1bGFyMi9jb3JlJztcbmltcG9ydCB7Q09SRV9ESVJFQ1RJVkVTLCBGT1JNX0RJUkVDVElWRVMsTmdDbGFzcyxOZ0Zvcm0sTmdTd2l0Y2gsTmdTd2l0Y2hXaGVuLE5nU3dpdGNoRGVmYXVsdH0gZnJvbSAnYW5ndWxhcjIvY29tbW9uJztcbmltcG9ydCB7Q29udHJvbCwgVmFsaWRhdG9ycywgTmdGb3JtTW9kZWwsIENvbnRyb2xHcm91cCxGb3JtQnVpbGRlcn0gIGZyb20gJ2FuZ3VsYXIyL2NvbW1vbic7XG5pbXBvcnQge1JPVVRFUl9ESVJFQ1RJVkVTLFJvdXRlQ29uZmlnLFJvdXRlcn0gZnJvbSAnYW5ndWxhcjIvcm91dGVyJztcbi8vUm91dGVyLFJvdXRlQ29uZmlnLFJvdXRlck91dGxldFxuaW1wb3J0IHtDb21wYW5pZXNTZXJ2aWNlfSBmcm9tICcuLi9zZXJ2aWNlcy9jb21wYW5pZXMuc2VydmljZXMnO1xuaW1wb3J0IHtNeUxvZ2dlcn0gIGZyb20gJy4uLy4uL3NoYXJlZC9zZXJ2aWNlcy9sb2dnaW5nLnNlcnZpY2UnO1xuaW1wb3J0IHtJbnB1dENvbXBvbmVudH0gIGZyb20gJy4uLy4uL3NoYXJlZC9jb21wb25lbnRzL2lucHV0L2lucHV0LmNvbXBvbmVudCc7XG5pbXBvcnQge0NvbXBhbnl9IGZyb20gJy4uL21vZGVscy9jb21wYW55Lm1vZGVsJztcbmltcG9ydCB7Q2xpbmljfSBmcm9tICcuLi9tb2RlbHMvY2xpbmljLm1vZGVsJztcbmltcG9ydCB7RG9jdG9yfSBmcm9tICcuLi9tb2RlbHMvZG9jdG9yLm1vZGVsJztcbmltcG9ydCB7UGVvcGxlfSBmcm9tICcuLi8uLi9wZW9wbGUvbW9kZWxzL3Blb3BsZS5tb2RlbCc7XG5cblxuaW1wb3J0IHtDbGluaWNMaXN0Q29tcG9uZW50fSBmcm9tICcuL2NsaW5pY2xpc3QuY29tcG9uZW50Jztcbi8vaW1wb3J0IHtEb2N0b3JMaXN0Q29tcG9uZW50fSBmcm9tICcuL2RvY3Rvcmxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7RG9jdG9yTGlzdENvbXBvbmVudH0gZnJvbSAnLi9kb2N0b3JsaXN0Mi5jb21wb25lbnQnO1xuaW1wb3J0IHtBZGRyZXNzQ29tcG9uZW50fSBmcm9tICcuLi8uLi9zaGFyZWQvY29tcG9uZW50cy9hZGRyZXNzL2FkZHJlc3MuY29tcG9uZW50JztcbmltcG9ydCB7VGFiQ29tcG9uZW50fSBmcm9tICcuLi8uLi9zaGFyZWQvY29tcG9uZW50cy90YWIvdGFiLmNvbXBvbmVudCc7XG5pbXBvcnQge1RhYnNldENvbXBvbmVudH0gZnJvbSAnLi4vLi4vc2hhcmVkL2NvbXBvbmVudHMvdGFiL3RhYnNldC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb21wYW55LWRldGFpbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb21wYW5pZXMvY29tcG9uZW50cy9jb21wYW55ZGV0YWlsLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXSxcbiAgZGlyZWN0aXZlczogW0ZPUk1fRElSRUNUSVZFUywgQ09SRV9ESVJFQ1RJVkVTLFJPVVRFUl9ESVJFQ1RJVkVTLE5nQ2xhc3MsTmdGb3JtLElucHV0Q29tcG9uZW50LE5nU3dpdGNoLE5nU3dpdGNoV2hlbixOZ1N3aXRjaERlZmF1bHQsVGFiQ29tcG9uZW50LFRhYnNldENvbXBvbmVudCxDbGluaWNMaXN0Q29tcG9uZW50LERvY3Rvckxpc3RDb21wb25lbnQsQWRkcmVzc0NvbXBvbmVudF1cbn0pXG5cbi8qXG5AUm91dGVDb25maWcoW1xuICB7cGF0aDonL2NsaW5pYycsICAgIG5hbWU6ICdDbGluaWNMaXN0JywgICBjb21wb25lbnQ6IENsaW5pY0xpc3RDb21wb25lbnQsIHVzZUFzRGVmYXVsdDogdHJ1ZX0sICBcbiAge3BhdGg6Jy9Eb2N0b3InLCAgICBuYW1lOiAnRG9jdG9yTGlzdCcsICAgY29tcG9uZW50OiBEb2N0b3JMaXN0Q29tcG9uZW50fSwgIFxuXSlcbiovXG5cbmV4cG9ydCBjbGFzcyBDb21wYW55RGV0YWlsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0e1xuXG4gIHB1YmxpYyBjb21wYW55IDogQ29tcGFueTtcbiAgcHVibGljIGNsaW5pY3MgOiBDbGluaWNbXTtcbiAgcHVibGljIGRvY3RvcnMgOiBEb2N0b3JbXTtcbiAgcHVibGljIGlzU3VibWl0dGVkIDogYm9vbGVhbiA9IGZhbHNlO1xuICBwdWJsaWMgY29tcG9uZW50czogQXJyYXk8T2JqZWN0PiA9IG5ldyBBcnJheTxPYmplY3Q+KCk7XG4gIHB1YmxpYyBteUZvcm06IENvbnRyb2xHcm91cDtcbiAgXG4gIHByaXZhdGUgY29tcGFueUlkQ29udHJvbDpDb250cm9sO1xuICBwcml2YXRlIGNvbXBhbnlOYW1lQ29udHJvbDpDb250cm9sOyAgIFxuICBwcml2YXRlIGFkZHJlc3NDb250cm9sOkNvbnRyb2w7XG4gIHByaXZhdGUgd2FyZENvbnRyb2w6Q29udHJvbDtcbiAgcHJpdmF0ZSBzdWJ1cmJEaXN0cmljdENvbnRyb2w6Q29udHJvbDtcbiAgcHJpdmF0ZSBzdGF0ZVByb3ZpbmNlQ29udHJvbDpDb250cm9sO1xuICBwcml2YXRlIGNvdW50cnlDb250cm9sOkNvbnRyb2w7XG4gIHByaXZhdGUgZGVzY3JpcHRpb25Db250cm9sOkNvbnRyb2w7XG4gIHByaXZhdGUgaXNlbmFibGVDb250cm9sOkNvbnRyb2w7XG4gIHByaXZhdGUgcG9saWN5Q29udHJvbDpDb250cm9sO1xuICBwcml2YXRlIGNvbmRpdGlvblRvQm9va0NvbnRyb2w6Q29udHJvbDtcbiAgcHJpdmF0ZSB3YXJkczpzdHJpbmdbXSA9IFsnMScsJzInLCczJywnNCcsJ2FiYyddOyBcblxuICBwcml2YXRlIGFkZHJlc3NPYmplY3Q6T2JqZWN0ID0ge307XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICAgICAgICBwcml2YXRlIF9jb21wYW5pZXNTZXJ2aWNlOiBDb21wYW5pZXNTZXJ2aWNlLFxuICAgICAgICAgICAgcHJpdmF0ZSBfbG9nOiBNeUxvZ2dlcixcbiAgICAgICAgICAgIHByaXZhdGUgX3JvdXRlcjogUm91dGVyLFxuICAgICAgICAgICAgcHJpdmF0ZSBfZmI6IEZvcm1CdWlsZGVyXG4gICAgICAgICAgICApe1xuXG4gICAgdGhpcy5jb21wYW55SWRDb250cm9sID0gbmV3IENvbnRyb2woKTtcbiAgICB0aGlzLmNvbXBhbnlOYW1lQ29udHJvbCA9IG5ldyBDb250cm9sKFwiXCIsIFZhbGlkYXRvcnMucmVxdWlyZWQgKTtcbiAgICB0aGlzLmFkZHJlc3NDb250cm9sID0gbmV3IENvbnRyb2woXCJcIiwgVmFsaWRhdG9ycy5yZXF1aXJlZCApO1xuICAgIHRoaXMud2FyZENvbnRyb2wgPSBuZXcgQ29udHJvbChcIlwiLCBWYWxpZGF0b3JzLnJlcXVpcmVkICk7XG4gICAgdGhpcy5zdWJ1cmJEaXN0cmljdENvbnRyb2wgPSBuZXcgQ29udHJvbChcIlwiLCBWYWxpZGF0b3JzLnJlcXVpcmVkICk7XG4gICAgdGhpcy5zdGF0ZVByb3ZpbmNlQ29udHJvbCA9IG5ldyBDb250cm9sKFwiXCIsIFZhbGlkYXRvcnMucmVxdWlyZWQgKTtcbiAgICB0aGlzLmNvdW50cnlDb250cm9sID0gbmV3IENvbnRyb2woXCJcIiwgVmFsaWRhdG9ycy5yZXF1aXJlZCApO1xuICAgIHRoaXMuZGVzY3JpcHRpb25Db250cm9sID0gbmV3IENvbnRyb2woXCJcIik7XG4gICAgdGhpcy5pc2VuYWJsZUNvbnRyb2wgPSBuZXcgQ29udHJvbChcIlwiKTtcbiAgICB0aGlzLnBvbGljeUNvbnRyb2wgPSBuZXcgQ29udHJvbChcIlwiKTtcbiAgICB0aGlzLmNvbmRpdGlvblRvQm9va0NvbnRyb2wgPSBuZXcgQ29udHJvbChcIlwiKTsgICAgXG5cblxuICAgIHRoaXMuY29tcG9uZW50cy5wdXNoKHtjb250cm9sOiB0aGlzLmNvbXBhbnlOYW1lQ29udHJvbCwgdHlwZTondGV4dCcsdGl0bGU6ICdDb21wYW55IE5hbWUnLCBwbGFjZWhvbGRlcjogJ0NvbXBhbnkgTmFtZScsIGlzUmVxdWlyZWQ6IHRydWUscmVxdWlyZWRNc2c6ICdDb21wYW55IG5hbWUgaXMgcmVxdWlyZWQnLGxhYmVsQ29sdW1uQ2xhc3M6J2NvbC1tZC0zIGNvbnRyb2wtbGFiZWwnLGlucHV0Q29sdW1uQ2xhc3M6J2NvbC1tZC05J30pO1xuICAgIFxuICAgIHRoaXMuY29tcG9uZW50cy5wdXNoKHtjb250cm9sOiB0aGlzLmFkZHJlc3NDb250cm9sLCB0eXBlOid0ZXh0JywgdGl0bGU6ICdBZGRyZXNzJywgcGxhY2Vob2xkZXI6ICdBZGRyZXNzJywgaXNSZXF1aXJlZDogdHJ1ZSxyZXF1aXJlZE1zZzogJ0FkZHJlc3MgaXMgcmVxdWlyZWQnLGxhYmVsQ29sdW1uQ2xhc3M6J2NvbC1tZC0zIGNvbnRyb2wtbGFiZWwnLGlucHV0Q29sdW1uQ2xhc3M6J2NvbC1tZC05J30pO1xuICAgIHRoaXMuY29tcG9uZW50cy5wdXNoKHtjb250cm9sOiB0aGlzLndhcmRDb250cm9sLCB0eXBlOidvcHRpb24nLCB0aXRsZTogJ1dhcmQnLCBwbGFjZWhvbGRlcjogJ1dhcmQnLCBpc1JlcXVpcmVkOiBmYWxzZSxyZXF1aXJlZE1zZzogJ1dhcmQgaXMgcmVxdWlyZWQnLGxhYmVsQ29sdW1uQ2xhc3M6J2NvbC1tZC0zIGNvbnRyb2wtbGFiZWwnLGlucHV0Q29sdW1uQ2xhc3M6J2NvbC1tZC05Jyx2YWx1ZXM6IHRoaXMud2FyZHN9KTtcbiAgICB0aGlzLmNvbXBvbmVudHMucHVzaCh7Y29udHJvbDogdGhpcy5zdWJ1cmJEaXN0cmljdENvbnRyb2wsIHR5cGU6J3RleHQnLCB0aXRsZTogJ0Rpc3RyaWN0JywgcGxhY2Vob2xkZXI6ICdEaXN0cmljdCcsIGlzUmVxdWlyZWQ6IHRydWUscmVxdWlyZWRNc2c6ICdEaXN0cmljdCBpcyByZXF1aXJlZCAhISEnLGxhYmVsQ29sdW1uQ2xhc3M6J2NvbC1tZC0zIGNvbnRyb2wtbGFiZWwnLGlucHV0Q29sdW1uQ2xhc3M6J2NvbC1tZC05J30pO1xuXG4gICAgdGhpcy5jb21wb25lbnRzLnB1c2goe2NvbnRyb2w6IHRoaXMuc3RhdGVQcm92aW5jZUNvbnRyb2wsIHR5cGU6J3RleHQnLCB0aXRsZTogJ1Byb3ZpbmNlJywgcGxhY2Vob2xkZXI6ICdQcm92aW5jZScsIGlzUmVxdWlyZWQ6IHRydWUscmVxdWlyZWRNc2c6ICdQcm92aW5jZSBpcyByZXF1aXJlZCAhISEnLGxhYmVsQ29sdW1uQ2xhc3M6J2NvbC1tZC0zIGNvbnRyb2wtbGFiZWwnLGlucHV0Q29sdW1uQ2xhc3M6J2NvbC1tZC05J30pO1xuICAgIHRoaXMuY29tcG9uZW50cy5wdXNoKHtjb250cm9sOiB0aGlzLmNvdW50cnlDb250cm9sLCB0eXBlOid0ZXh0JywgdGl0bGU6ICdDb3VudHJ5JywgcGxhY2Vob2xkZXI6ICdDb3VudHJ5JywgaXNSZXF1aXJlZDogdHJ1ZSxyZXF1aXJlZE1zZzogJ0NvdW50cnkgaXMgcmVxdWlyZWQgISEhJyxsYWJlbENvbHVtbkNsYXNzOidjb2wtbWQtMyBjb250cm9sLWxhYmVsJyxpbnB1dENvbHVtbkNsYXNzOidjb2wtbWQtOSd9KTtcbiAgICB0aGlzLmNvbXBvbmVudHMucHVzaCh7Y29udHJvbDogdGhpcy5pc2VuYWJsZUNvbnRyb2wsIHR5cGU6J2Jvb2xlYW4nLCB0aXRsZTogJ0VuYWJsZScsIHBsYWNlaG9sZGVyOiAnQ29tcGFueSBOYW1lJywgaXNSZXF1aXJlZDogZmFsc2UscmVxdWlyZWRNc2c6ICdDb21wYW55IG5hbWUgaXMgcmVxdWlyZWQgISEhJyxsYWJlbENvbHVtbkNsYXNzOidjb2wtbWQtMyBjb250cm9sLWxhYmVsJyxpbnB1dENvbHVtbkNsYXNzOidjb2wtbWQtOSd9KTsgICAgXG5cbiAgICB0aGlzLmNvbXBvbmVudHMucHVzaCh7Y29udHJvbDogdGhpcy5kZXNjcmlwdGlvbkNvbnRyb2wsIHR5cGU6J3RleHQnLCB0aXRsZTogJ0Rlc2NyaXB0aW9uJywgcGxhY2Vob2xkZXI6ICdEZXNjcmlwdGlvbicsIGlzUmVxdWlyZWQ6IGZhbHNlLHJlcXVpcmVkTXNnOiAnQ29tcGFueSBuYW1lIGlzIHJlcXVpcmVkICEhIScsbGFiZWxDb2x1bW5DbGFzczonY29sLW1kLTMgY29udHJvbC1sYWJlbCcsaW5wdXRDb2x1bW5DbGFzczonY29sLW1kLTknfSk7ICAgIFxuICAgIHRoaXMuY29tcG9uZW50cy5wdXNoKHtjb250cm9sOiB0aGlzLnBvbGljeUNvbnRyb2wsIHR5cGU6J3RleHQnLCB0aXRsZTogJ1BvbGljeScsIHBsYWNlaG9sZGVyOiAnUG9saWN5JywgaXNSZXF1aXJlZDogZmFsc2UscmVxdWlyZWRNc2c6ICdDb21wYW55IG5hbWUgaXMgcmVxdWlyZWQgISEhJyxsYWJlbENvbHVtbkNsYXNzOidjb2wtbWQtMyBjb250cm9sLWxhYmVsJyxpbnB1dENvbHVtbkNsYXNzOidjb2wtbWQtOSd9KTtcbiAgICB0aGlzLmNvbXBvbmVudHMucHVzaCh7Y29udHJvbDogdGhpcy5jb25kaXRpb25Ub0Jvb2tDb250cm9sLCB0eXBlOid0ZXh0JywgdGl0bGU6ICdDb25kaXRpb24gdG8gYm9vaycsIHBsYWNlaG9sZGVyOiAnQ29uZGl0aW9uIHRvIGJvb2snLCBpc1JlcXVpcmVkOiBmYWxzZSxyZXF1aXJlZE1zZzogJ0NvbXBhbnkgbmFtZSBpcyByZXF1aXJlZCAhISEnLGxhYmVsQ29sdW1uQ2xhc3M6J2NvbC1tZC0zIGNvbnRyb2wtbGFiZWwnLGlucHV0Q29sdW1uQ2xhc3M6J2NvbC1tZC05J30pO1xuXG4gICAgdGhpcy5teUZvcm0gPSBuZXcgQ29udHJvbEdyb3VwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhbnlJZDogdGhpcy5jb21wYW55SWRDb250cm9sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFueU5hbWU6IHRoaXMuY29tcGFueU5hbWVDb250cm9sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5hZGRyZXNzQ29udHJvbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhcmQ6IHRoaXMud2FyZENvbnRyb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJ1cmJEaXN0cmljdDogdGhpcy5zdWJ1cmJEaXN0cmljdENvbnRyb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZVByb3ZpbmNlOiB0aGlzLnN0YXRlUHJvdmluY2VDb250cm9sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRyeTogdGhpcy5jb3VudHJ5Q29udHJvbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uQ29udHJvbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzZW5hYmxlOiB0aGlzLmlzZW5hYmxlQ29udHJvbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvbGljeTogdGhpcy5wb2xpY3lDb250cm9sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZGl0aW9uVG9Cb29rOiB0aGlzLmNvbmRpdGlvblRvQm9va0NvbnRyb2wsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCl7XG5cbiAgICB0aGlzLnNldENvbXBhbnlEYXRhKCk7ICAgICAgXG4gICAgdGhpcy5teUZvcm0udmFsdWVDaGFuZ2VzXG4gICAgICAgIC5zdWJzY3JpYmUoKHZhbHVlKSA9PiB7XG4gICAgICAgICAgIHRoaXMuX2xvZy5sb2coXCJNb2RlbCBEcml2ZW4gRm9ybSA6IFwiICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgICAgICAgfSk7XG5cbiAgICAvKlxuICAgIHRoaXMuZm9ybS52YWx1ZUNoYW5nZXNcbiAgICAgICAgLm1hcCgodmFsdWUpID0+IHtcbiAgICAgICAgICAgIHZhbHVlLmZpcnN0TmFtZSA9IHZhbHVlLmZpcnN0TmFtZS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9KVxuICAgICAgICAuZmlsdGVyKCh2YWx1ZSkgPT4gdGhpcy5mb3JtLnZhbGlkKVxuICAgICAgICAuc3Vic2NyaWJlKCh2YWx1ZSkgPT4ge1xuICAgICAgICAgICBhbGVydChcIk1vZGVsIERyaXZlbiBGb3JtIHZhbGlkIHZhbHVlOiB2bSA9IFwiICsgICAgICAgICBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xuICAgICAgICB9KTtcbiAgICAqLyAgICBcbiAgfVxuXG4gIGFkZHJlc3NDb250cm9sR3JvdXAoYWRkcmVzc0NvbnRyb2xHcm91cDogQ29udHJvbEdyb3VwKXsgICAgXG4gICAgLy90aGlzLnBlcnNvbiA9IHBlcnNvbkNvbnRyb2xHcm91cDtcbiAgICBcbiAgICB0aGlzLm15Rm9ybS5hZGRDb250cm9sKCdhZGRyZXNzR3JvdXAnLHRoaXMuX2ZiLmdyb3VwKGFkZHJlc3NDb250cm9sR3JvdXAuY29udHJvbHMpKTtcbiAgICAvL3RoaXMuX2xvZy5sb2coXCJwZW9wbGUgZGV0YWlsIGNvbnRyb2wgZ3JvdXAgPVwiLHRoaXMubXlGb3JtKTtcbiAgfVxuXG4gIHNhdmUoKXtcbiAgICB0aGlzLmlzU3VibWl0dGVkID0gdHJ1ZTtcbiAgICBjb25zb2xlLmxvZygnc3VibWl0aW5nLi4uJyx0aGlzLm15Rm9ybS52YWx1ZSk7XG4gICAgdGhpcy5fY29tcGFuaWVzU2VydmljZS5zYXZlQ29tcGFueSh0aGlzLm15Rm9ybS52YWx1ZSkuc3Vic2NyaWJlKFxuICAgICAgICBkYXRhID0+IHt0aGlzLl9sb2cubG9nKFwiZm9ybVwiLGRhdGEpOyB0aGlzLnNldENvbXBhbnlEYXRhKCk7IH0sXG4gICAgICAgIGVyciA9PiB7dGhpcy5fbG9nLmxvZyhlcnIpO30sXG4gICAgICAgICgpID0+IHt0aGlzLl9sb2cubG9nKCdjcmVhdGVkICEnKTt9XG4gICAgICAgICk7XG4gIH1cblxuICBzaG93Rm9ybUNvbnRyb2xzKGZvcm06TmdGb3JtKXtcbiAgICBjb25zb2xlLmxvZyh0aGlzLm15Rm9ybSk7ICAgIFxuICB9XG5cbiAgcHVibGljIG5ld09yRWRpdENsaW5pY0RldGFpbChjbGluaWM6YW55KXsgICAgXG4gICAgdGhpcy5fY29tcGFuaWVzU2VydmljZS5zZXRDdXJyZW50Q2xpbmljKGNsaW5pYyk7XG4gICAgdGhpcy5fbG9nLmxvZyhcImNvbXBhbnkgPSBcIixjbGluaWMpO1xuICAgIHRoaXMuX3JvdXRlci5uYXZpZ2F0ZShbJ0NsaW5pY0RldGFpbCddKTtcbiAgfVxuXG4gIHB1YmxpYyBuZXdPckVkaXREb2N0b3JEZXRhaWwoZG9jdG9yOlBlb3BsZSl7ICAgIFxuICAgIHRoaXMuX2xvZy5sb2coXCJjbGlja2VkIG9uIGRvY3RvciA9IFwiLGRvY3Rvcik7XG4gICAgdGhpcy5fY29tcGFuaWVzU2VydmljZS5zZXRDdXJyZW50RG9jdG9yKGRvY3Rvcik7ICAgIFxuICAgIHRoaXMuX3JvdXRlci5uYXZpZ2F0ZShbJ0RvY3RvckRldGFpbCddKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0Q29tcGFueURhdGEoKXtcbiAgICB0aGlzLmNvbXBhbnkgPSB0aGlzLl9jb21wYW5pZXNTZXJ2aWNlLmdldEN1cnJlbnRDb21wYW55KCk7XG4gICAgdGhpcy5fbG9nLmxvZyhcIkdldCBkYXRhIGZyb20gY29tcGFueSBsaXN0ID0gXCIsdGhpcy5jb21wYW55LHRoaXMuY2xpbmljcyk7XG4gICAgaWYodGhpcy5jb21wYW55KXtcbiAgICAgIHRoaXMuY2xpbmljcyA9IHRoaXMuY29tcGFueS5jbGluaWNzOyAgXG4gICAgICB0aGlzLmRvY3RvcnMgPSB0aGlzLmNvbXBhbnkuZG9jdG9ycztcbiAgICAgIHRoaXMuY29tcGFueUlkQ29udHJvbC51cGRhdGVWYWx1ZSh0aGlzLmNvbXBhbnkuY29tcGFueUlkKTtcbiAgICAgIHRoaXMuY29tcGFueU5hbWVDb250cm9sLnVwZGF0ZVZhbHVlKHRoaXMuY29tcGFueS5jb21wYW55TmFtZSk7XG4gICAgICB0aGlzLmFkZHJlc3NDb250cm9sLnVwZGF0ZVZhbHVlKHRoaXMuY29tcGFueS5hZGRyZXNzKTtcbiAgICAgIHRoaXMud2FyZENvbnRyb2wudXBkYXRlVmFsdWUodGhpcy5jb21wYW55LndhcmQpO1xuICAgICAgdGhpcy5zdWJ1cmJEaXN0cmljdENvbnRyb2wudXBkYXRlVmFsdWUodGhpcy5jb21wYW55LnN1YnVyYkRpc3RyaWN0KTtcbiAgICAgIHRoaXMuc3RhdGVQcm92aW5jZUNvbnRyb2wudXBkYXRlVmFsdWUodGhpcy5jb21wYW55LnN0YXRlUHJvdmluY2UpO1xuICAgICAgdGhpcy5jb3VudHJ5Q29udHJvbC51cGRhdGVWYWx1ZSh0aGlzLmNvbXBhbnkuY291bnRyeSk7XG4gICAgICB0aGlzLmRlc2NyaXB0aW9uQ29udHJvbC51cGRhdGVWYWx1ZSh0aGlzLmNvbXBhbnkuZGVzY3JpcHRpb24pO1xuICAgICAgdGhpcy5pc2VuYWJsZUNvbnRyb2wudXBkYXRlVmFsdWUodGhpcy5jb21wYW55LmlzZW5hYmxlKTtcbiAgICAgIHRoaXMucG9saWN5Q29udHJvbC51cGRhdGVWYWx1ZSh0aGlzLmNvbXBhbnkucG9saWN5KTtcbiAgICAgIHRoaXMuY29uZGl0aW9uVG9Cb29rQ29udHJvbC51cGRhdGVWYWx1ZSh0aGlzLmNvbXBhbnkuY29uZGl0aW9uVG9Cb29rKTsgICAgXG5cbiAgICAgIHRoaXMuYWRkcmVzc09iamVjdC5hZGRyZXNzID0gdGhpcy5jb21wYW55LmFkZHJlc3M7XG4gICAgICB0aGlzLmFkZHJlc3NPYmplY3Qud2FyZCA9IHRoaXMuY29tcGFueS53YXJkO1xuICAgICAgdGhpcy5hZGRyZXNzT2JqZWN0LnN1YnVyYkRpc3RyaWN0ID0gdGhpcy5jb21wYW55LnN1YnVyYkRpc3RyaWN0O1xuICAgICAgdGhpcy5hZGRyZXNzT2JqZWN0LnN0YXRlUHJvdmluY2UgPSB0aGlzLmNvbXBhbnkuc3RhdGVQcm92aW5jZTtcbiAgICAgIHRoaXMuYWRkcmVzc09iamVjdC5wb3N0Y29kZSA9IHRoaXMuY29tcGFueS5wb3N0Y29kZTtcbiAgICAgIHRoaXMuYWRkcmVzc09iamVjdC5jb3VudHJ5ID0gdGhpcy5jb21wYW55LmNvdW50cnk7XG5cbiAgICB9ICAgIFxuICB9XG59XG4iXX0=
