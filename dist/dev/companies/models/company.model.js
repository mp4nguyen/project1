"use strict";
var clinic_model_1 = require('./clinic.model');
var doctor_model_1 = require('./doctor.model');
var Company = (function () {
    function Company(obj) {
        this.clinics = [];
        this.doctors = [];
        this.companyId = obj && obj.companyId || null;
        this.companyName = obj && obj.companyName || null;
        this.isenable = obj && obj.isenable || null;
        this.address = obj && obj.address || null;
        this.suburbDistrict = obj && obj.suburbDistrict || null;
        this.ward = obj && obj.ward || null;
        this.postcode = obj && obj.postcode || null;
        this.stateProvince = obj && obj.stateProvince || null;
        this.country = obj && obj.country || null;
        this.description = obj && obj.description || null;
        this.policy = obj && obj.policy || null;
        this.conditionToBook = obj && obj.conditionToBook || null;
        this.logoPath = obj && obj.logoPath || null;
        this.createdBy = obj && obj.createdBy || null;
        this.creationDate = obj && obj.creationDate || null;
        this.lastUpdatedBy = obj && obj.lastUpdatedBy || null;
        this.lastUpdateDate = obj && obj.lastUpdateDate || null;
        if (obj && obj.Clinics) {
            for (var _i = 0, _a = obj.Clinics; _i < _a.length; _i++) {
                var c = _a[_i];
                this.pushClinic(c);
            }
        }
        if (obj && obj.Doctors) {
            for (var _b = 0, _c = obj.Doctors; _b < _c.length; _b++) {
                var c = _c[_b];
                this.pushDoctor(c);
            }
        }
    }
    Company.prototype.pushClinic = function (obj) {
        this.clinics.push(new clinic_model_1.Clinic(obj));
    };
    Company.prototype.pushDoctor = function (obj) {
        this.doctors.push(new doctor_model_1.Doctor(obj));
    };
    return Company;
}());
exports.Company = Company;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbmllcy9tb2RlbHMvY29tcGFueS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsNkJBQXFCLGdCQUFnQixDQUFDLENBQUE7QUFDdEMsNkJBQXFCLGdCQUFnQixDQUFDLENBQUE7QUFFdEM7SUFxQkksaUJBQVksR0FBUTtRQUhiLFlBQU8sR0FBVyxFQUFFLENBQUM7UUFDckIsWUFBTyxHQUFXLEVBQUUsQ0FBQztRQUkzQixJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQztRQUM1QyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQztRQUNoRCxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUMxQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQztRQUN4QyxJQUFJLENBQUMsY0FBYyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsY0FBYyxJQUFJLElBQUksQ0FBQztRQUN0RCxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztRQUNsQyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUMxQyxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQztRQUNwRCxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQztRQUN4QyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQztRQUNoRCxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQztRQUN0QyxJQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQztRQUN4RCxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUMxQyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQztRQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQztRQUNsRCxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQztRQUNwRCxJQUFJLENBQUMsY0FBYyxHQUFHLEdBQUcsSUFBRSxHQUFHLENBQUMsY0FBYyxJQUFJLElBQUksQ0FBQztRQUV0RCxFQUFFLENBQUEsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBLENBQUM7WUFDdEIsR0FBRyxDQUFBLENBQVUsVUFBVyxFQUFYLEtBQUEsR0FBRyxDQUFDLE9BQU8sRUFBWCxjQUFXLEVBQVgsSUFBVyxDQUFDO2dCQUFyQixJQUFJLENBQUMsU0FBQTtnQkFDUixJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ25CO1FBQ0YsQ0FBQztRQUVFLEVBQUUsQ0FBQSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUEsQ0FBQztZQUNuQixHQUFHLENBQUEsQ0FBVSxVQUFXLEVBQVgsS0FBQSxHQUFHLENBQUMsT0FBTyxFQUFYLGNBQVcsRUFBWCxJQUFXLENBQUM7Z0JBQXJCLElBQUksQ0FBQyxTQUFBO2dCQUNMLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDdEI7UUFDTCxDQUFDO0lBQ0wsQ0FBQztJQUVNLDRCQUFVLEdBQWpCLFVBQWtCLEdBQU87UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxxQkFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVNLDRCQUFVLEdBQWpCLFVBQWtCLEdBQU87UUFDckIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxxQkFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUNMLGNBQUM7QUFBRCxDQTdEQSxBQTZEQyxJQUFBO0FBN0RZLGVBQU8sVUE2RG5CLENBQUEiLCJmaWxlIjoiY29tcGFuaWVzL21vZGVscy9jb21wYW55Lm1vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge0NsaW5pY30gZnJvbSAnLi9jbGluaWMubW9kZWwnO1xuaW1wb3J0IHtEb2N0b3J9IGZyb20gJy4vZG9jdG9yLm1vZGVsJztcblxuZXhwb3J0IGNsYXNzIENvbXBhbnl7XG4gIFx0cHVibGljIGNvbXBhbnlJZDogbnVtYmVyO1xuICAgIHB1YmxpYyBjb21wYW55TmFtZTogc3RyaW5nO1xuICAgIHB1YmxpYyBpc2VuYWJsZTogbnVtYmVyO1xuICAgIHB1YmxpYyBhZGRyZXNzOiBzdHJpbmc7XG4gICAgcHVibGljIHN1YnVyYkRpc3RyaWN0OiBzdHJpbmc7XG4gICAgcHVibGljIHdhcmQ6IHN0cmluZztcbiAgICBwdWJsaWMgcG9zdGNvZGU6IHN0cmluZztcbiAgICBwdWJsaWMgc3RhdGVQcm92aW5jZTogc3RyaW5nO1xuICAgIHB1YmxpYyBjb3VudHJ5OiBzdHJpbmc7XG4gICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgcHVibGljIHBvbGljeTogc3RyaW5nO1xuICAgIHB1YmxpYyBjb25kaXRpb25Ub0Jvb2s6IHN0cmluZztcbiAgICBwdWJsaWMgbG9nb1BhdGg6IHN0cmluZztcbiAgICBwdWJsaWMgY3JlYXRlZEJ5OiBudW1iZXI7XG4gICAgcHVibGljIGNyZWF0aW9uRGF0ZTogRGF0ZTtcbiAgICBwdWJsaWMgbGFzdFVwZGF0ZWRCeTogbnVtYmVyO1xuICAgIHB1YmxpYyBsYXN0VXBkYXRlRGF0ZTogRGF0ZTtcbiAgICBwdWJsaWMgY2xpbmljczogQ2xpbmljW109W107XG4gICAgcHVibGljIGRvY3RvcnM6IERvY3RvcltdPVtdO1xuXG4gICAgY29uc3RydWN0b3Iob2JqOiBhbnkpe1xuICAgIFx0XG4gICAgXHR0aGlzLmNvbXBhbnlJZCA9IG9iaiYmb2JqLmNvbXBhbnlJZCB8fCBudWxsO1xuICAgIFx0dGhpcy5jb21wYW55TmFtZSA9IG9iaiYmb2JqLmNvbXBhbnlOYW1lIHx8IG51bGw7XG4gICAgXHR0aGlzLmlzZW5hYmxlID0gb2JqJiZvYmouaXNlbmFibGUgfHwgbnVsbDtcbiAgICBcdHRoaXMuYWRkcmVzcyA9IG9iaiYmb2JqLmFkZHJlc3MgfHwgbnVsbDtcbiAgICBcdHRoaXMuc3VidXJiRGlzdHJpY3QgPSBvYmomJm9iai5zdWJ1cmJEaXN0cmljdCB8fCBudWxsO1xuICAgIFx0dGhpcy53YXJkID0gb2JqJiZvYmoud2FyZCB8fCBudWxsO1xuICAgIFx0dGhpcy5wb3N0Y29kZSA9IG9iaiYmb2JqLnBvc3Rjb2RlIHx8IG51bGw7XG4gICAgXHR0aGlzLnN0YXRlUHJvdmluY2UgPSBvYmomJm9iai5zdGF0ZVByb3ZpbmNlIHx8IG51bGw7XG4gICAgXHR0aGlzLmNvdW50cnkgPSBvYmomJm9iai5jb3VudHJ5IHx8IG51bGw7XG4gICAgXHR0aGlzLmRlc2NyaXB0aW9uID0gb2JqJiZvYmouZGVzY3JpcHRpb24gfHwgbnVsbDtcbiAgICBcdHRoaXMucG9saWN5ID0gb2JqJiZvYmoucG9saWN5IHx8IG51bGw7XG4gICAgXHR0aGlzLmNvbmRpdGlvblRvQm9vayA9IG9iaiYmb2JqLmNvbmRpdGlvblRvQm9vayB8fCBudWxsO1xuICAgIFx0dGhpcy5sb2dvUGF0aCA9IG9iaiYmb2JqLmxvZ29QYXRoIHx8IG51bGw7XG4gICAgXHR0aGlzLmNyZWF0ZWRCeSA9IG9iaiYmb2JqLmNyZWF0ZWRCeSB8fCBudWxsO1xuICAgIFx0dGhpcy5jcmVhdGlvbkRhdGUgPSBvYmomJm9iai5jcmVhdGlvbkRhdGUgfHwgbnVsbDtcbiAgICBcdHRoaXMubGFzdFVwZGF0ZWRCeSA9IG9iaiYmb2JqLmxhc3RVcGRhdGVkQnkgfHwgbnVsbDtcbiAgICBcdHRoaXMubGFzdFVwZGF0ZURhdGUgPSBvYmomJm9iai5sYXN0VXBkYXRlRGF0ZSB8fCBudWxsO1xuXG4gICAgXHRpZihvYmogJiYgb2JqLkNsaW5pY3Mpe1xuICAgIFx0XHRmb3IodmFyIGMgb2Ygb2JqLkNsaW5pY3Mpe1xuICAgIFx0XHRcdHRoaXMucHVzaENsaW5pYyhjKTtcbiAgICBcdFx0fVxuICAgIFx0fVxuXG4gICAgICAgIGlmKG9iaiAmJiBvYmouRG9jdG9ycyl7XG4gICAgICAgICAgICBmb3IodmFyIGMgb2Ygb2JqLkRvY3RvcnMpe1xuICAgICAgICAgICAgICAgIHRoaXMucHVzaERvY3RvcihjKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBwdXNoQ2xpbmljKG9iajphbnkpeyAgICBcdFxuICAgIFx0dGhpcy5jbGluaWNzLnB1c2gobmV3IENsaW5pYyhvYmopKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcHVzaERvY3RvcihvYmo6YW55KXsgICAgICAgIFxuICAgICAgICB0aGlzLmRvY3RvcnMucHVzaChuZXcgRG9jdG9yKG9iaikpO1xuICAgIH1cbn0iXX0=
